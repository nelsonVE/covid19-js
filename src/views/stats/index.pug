extends ../layout/layout
block content

    include ../layout/navbar

    .container
        .row
            .col-md-2
            .col-md-8.text-center.box
                h1 Stats
                small Last updated:&nbsp;
                small#last 0
                h3 Confirmed:
                h4#confirmed 0
                h3 Recovered:
                h4#recovered 0
                h3 Deaths: 
                h4#deaths 0
            .col-md-2
    <br><br>
    .container
        .row
            .col-md-2
            .col-md-8.box
                .row
                    .col-md-6.text-center
                        h1 Recovered
                        h4 New Recovered
                        h3 !{info['NewRecovered'].toLocaleString()}
                        h4 Total Recovered
                        h3 !{info['TotalRecovered'].toLocaleString()}
                    .col-md-6.border-left.text-center
                        h1 Deaths
                        h4 New Deaths
                        h3 !{info['NewDeaths'].toLocaleString()}
                        h4 Total Deaths 
                        h3 !{info['TotalDeaths'].toLocaleString()}
            .col-md-2
    <br><br>
    .row
        .col-md-3
        .col-md-6.text-center
            .tile
                h3.tile-title Graph
                .embed-responsive.embed-responsive-16by9
                    canvas.embed-responsive-item(id="myChart")
        .col-md-3


block js-scripts
    
    script(type='text/javascript').
        const MAX_X = 7;
        var ctx = document.getElementById('myChart').getContext('2d');
        var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
        var start_date = new Date('2020-1-22');
        var date = new Date();
        var date_now = new Date();
        const diffTime = Math.abs(date - start_date);
        var diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24)); 
        diffDays = diffDays / MAX_X;
        var dates = [];
        var confirmed = [];
        var deaths = [];
        var recovered = [];
        var arr_data = !{body};

        date.setDate(date.getDate() - (MAX_X * (diffDays)));
        
        for(let i = 0; i < MAX_X; i++){
            (i+1 < MAX_X)?((i === 0)?date = start_date:date.setDate(date.getDate() + diffDays)) : date = date_now;
            confirmed.push(arr_data[i]['result']['confirmed']);
            deaths.push(arr_data[i]['result']['deaths']);
            recovered.push(arr_data[i]['result']['recovered']);
            dates[i] = months[date.getMonth()] + " " + date.getDate();
        }

        let stats = arr_data[arr_data.length - 1];

        document.getElementById('last').innerHTML = stats['date'];
        document.getElementById('confirmed').innerHTML = stats['result']['confirmed'].toLocaleString();
        document.getElementById('recovered').innerHTML = stats['result']['recovered'].toLocaleString();
        document.getElementById('deaths').innerHTML = stats['result']['deaths'].toLocaleString();

        var myChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: dates,
                datasets: [{
                    label: '# Confirmed',
                    data: confirmed,
                    backgroundColor: [
                        'rgba(255, 99, 132, 0)',
                    ],
                    borderColor: [
                        'rgba(155, 155, 255, 1)',
                    ],
                    borderWidth: 3
                },{
                    label: '# Deaths',
                    data: deaths,
                    backgroundColor: [
                        'rgba(255, 50, 50, 0)',
                    ],
                    borderColor: [
                        'rgba(255, 50, 50, 1)',
                    ],
                    borderWidth: 3
                },{
                    label: '# Recovered',
                    data: recovered,
                    backgroundColor: [
                        'rgba(50, 255, 50, 0)',
                    ],
                    borderColor: [
                        'rgba(50, 255, 50, 1)',
                    ],
                    borderWidth: 3
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                },
                tooltips: {
                    callbacks: {
                        label: function(tooltipItem, data) {
                            return tooltipItem.yLabel.toFixed(2).replace(/\d(?=(\d{3})+\.)/g, '$&,');
                        },
                        tooltipTemplate: function(label) { return label.value.toFixed(2).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");}
                    }
                }
            }
        });
